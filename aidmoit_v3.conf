input{
	file{
		type => "json"
		path => "urban_test.jsonl"
		codec => "json"
		sincedb_path => "/dev/null"
		start_position => "beginning"
	}
}

filter {

  mutate {
     
      remove_field => ["post_date", "poste_date","manually_validated", "_id"]
     
 }

      date {
        'match' => [ "TNE.date", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss" ]

      }

	# Geocode SNE location thank to photon and OSM
	if([SNE][ent0]) {
		rest{
			request => {
				url => "https://photon.komoot.de/api/"
				method => "get"
				params => {
					"q" => "%{[SNE][ent0]}"
					"limit" =>1

				}
				headers => { "Content-Type" => "application/json" }
			}
			json => true 
			target => 'rest'
		}
		if([rest][features][0][geometry][coordinates]){
			mutate{
				add_field => {	
					"[ent0_osm][centroid]" => "%{[rest][features][0][geometry][coordinates][1]}, %{[rest][features][0][geometry][coordinates][0]}"
				}
				
			
			}
		}
		if([rest][features][0][properties][extent]){
			mutate{
				add_field => {				
					"[ent0_osm][extent]" => "[[%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][2]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][2]}]]"
				}
				
			
			}
		}
		if([rest][features][0][properties][country]){
			mutate{
				add_field => {					
					"[ent0_osm][country]" => "%{[rest][features][0][properties][country]}"
				}
	
			
			}
		}
	}

		# Geocode SNE location thank to photon and OSM
	if([SNE][ent1]) {
		rest{
			request => {
				url => "https://photon.komoot.de/api/"
				method => "get"
				params => {
					"q" => "%{[SNE][ent1]}"
					"limit" =>1

				}
				headers => { "Content-Type" => "application/json" }
			}
			json => true 
			target => 'rest'
		}
		if([rest][features][0][geometry][coordinates]){
			mutate{
				add_field => {	
					"[ent1_osm][centroid]" => "%{[rest][features][0][geometry][coordinates][1]}, %{[rest][features][0][geometry][coordinates][0]}"
				}
				
			
			}
		}
		if([rest][features][0][properties][extent]){
			mutate{
				add_field => {				
					"[ent1_osm][extent]" => "[[%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][2]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][2]}]]"
				}
				
			
			}
		}
		if([rest][features][0][properties][country]){
			mutate{
				add_field => {					
					"[ent1_osm][country]" => "%{[rest][features][0][properties][country]}"
				}
	
			
			}
		}
	}

		# Geocode SNE location thank to photon and OSM
	if([SNE][ent2]) {
		rest{
			request => {
				url => "https://photon.komoot.de/api/"
				method => "get"
				params => {
					"q" => "%{[SNE][ent2]}"
					"limit" =>1

				}
				headers => { "Content-Type" => "application/json" }
			}
			json => true 
			target => 'rest'
		}
		if([rest][features][0][geometry][coordinates]){
			mutate{
				add_field => {	
					"[ent2_osm][centroid]" => "%{[rest][features][0][geometry][coordinates][1]}, %{[rest][features][0][geometry][coordinates][0]}"
				}
				
			
			}
		}
		if([rest][features][0][properties][extent]){
			mutate{
				add_field => {				
					"[ent2_osm][extent]" => "[[%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][2]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][2]}]]"
				}
				
			
			}
		}
		if([rest][features][0][properties][country]){
			mutate{
				add_field => {					
					"[ent2_osm][country]" => "%{[rest][features][0][properties][country]}"
				}
	
			
			}
		}
	}

		# Geocode SNE location thank to photon and OSM
	if([SNE][ent3]) {
		rest{
			request => {
				url => "https://photon.komoot.de/api/"
				method => "get"
				params => {
					"q" => "%{[SNE][ent3]}"
					"limit" =>1

				}
				headers => { "Content-Type" => "application/json" }
			}
			json => true 
			target => 'rest'
		}
		if([rest][features][0][geometry][coordinates]){
			mutate{
				add_field => {	
					"[ent3_osm][centroid]" => "%{[rest][features][0][geometry][coordinates][1]}, %{[rest][features][0][geometry][coordinates][0]}"
				}
				
			
			}
		}
		if([rest][features][0][properties][extent]){
			mutate{
				add_field => {				
					"[ent3_osm][extent]" => "[[%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][2]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][2]}]]"
				}
				
			
			}
		}
		if([rest][features][0][properties][country]){
			mutate{
				add_field => {					
					"[ent3_osm][country]" => "%{[rest][features][0][properties][country]}"
				}
	
			
			}
		}
	}

		# Geocode SNE location thank to photon and OSM
	if([SNE][ent4]) {
		rest{
			request => {
				url => "https://photon.komoot.de/api/"
				method => "get"
				params => {
					"q" => "%{[SNE][ent4]}"
					"limit" =>1

				}
				headers => { "Content-Type" => "application/json" }
			}
			json => true 
			target => 'rest'
		}
		if([rest][features][0][geometry][coordinates]){
			mutate{
				add_field => {	
					"[ent4_osm][centroid]" => "%{[rest][features][0][geometry][coordinates][1]}, %{[rest][features][0][geometry][coordinates][0]}"
				}
				
			
			}
		}
		if([rest][features][0][properties][extent]){
			mutate{
				add_field => {				
					"[ent4_osm][extent]" => "[[%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][2]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][2]}]]"
				}
				
			
			}
		}
		if([rest][features][0][properties][country]){
			mutate{
				add_field => {					
					"[ent4_osm][country]" => "%{[rest][features][0][properties][country]}"
				}
	
			
			}
		}
	}
}
output{
	#if [index] == "aidmoit_v3" {
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "aidmoit_v3"
			manage_template => true
        		#template_overwrite => true
			template => "aidmoit_v3.json"
			template_name => "aidmoit_v3"
	}
 #}
}
